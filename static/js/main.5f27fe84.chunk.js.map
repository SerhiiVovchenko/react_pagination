{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","useEffect","maxPagination","Math","ceil","pagination","Array","map","_","i","isPrevDisabled","isNextDisabled","length","className","classNames","disabled","href","onClick","item","active","PER_PAGE_SELECTOR","items","from","to","numbers","n","push","getNumbers","App","useState","selectValue","setSelectValue","currentValue","setCurrentValue","visibleItems","slice","firstItem","indexOf","lastItem","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"2NAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEAC,qBAAU,WACRD,EAAa,KACZ,CAACF,IAEJ,IAAMI,EAAgBC,KAAKC,KAAKP,EAAQC,GAClCO,EAAa,YAAIC,MAAMJ,IAAgBK,KAAI,SAACC,EAAGC,GAAJ,OAAUA,EAAI,KACzDC,EAAiC,IAAhBX,EACjBY,EAAiBZ,IAAgBM,EAAWO,OAclD,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CACEC,SAAUL,IAJhB,SAQE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QA3BS,WACVP,GACHV,EAAaD,EAAc,IAoBzB,oBAWDM,EAAWE,KAAI,SAAAW,GAAI,OAClB,oBAEEL,UAAWC,IACT,YACA,CACEK,OAAQpB,IAAgBmB,IAL9B,SASE,mBACE,UAAQ,WACRL,UAAU,YACVG,KAAI,WAAME,GACVD,QAAS,kBAAMjB,EAAakB,IAJ9B,SAMGA,KAdEA,MAmBT,oBACEL,UAAWC,IACT,YACA,CACEC,SAAUJ,IAJhB,SAQE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QA7DS,WACVN,GACHX,EAAaD,EAAc,IAsDzB,wBClFFqB,EAAoB,CAAC,EAAG,EAAG,GAAI,IAC/BC,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBpB,KAAI,SAAAkB,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAsCC,mBAAST,EAAkB,IAAjE,mBAAOU,EAAP,KAAoBC,EAApB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMpC,EAAQwB,EAAMT,OAEdsB,EAAeb,EAAMc,OACxBH,EAAe,GAAKF,EAAaE,EAAeF,GAG7CM,EAAYf,EAAMgB,QAAQH,EAAa,IAAM,EAC7CI,EAAWjB,EAAMgB,QAAQH,EAAaA,EAAatB,OAAS,IAAM,EAMxE,OACE,sBAAKC,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWmB,EADX,mBACkCI,EADlC,cACiDE,EADjD,eACgEzC,EADhE,OAIA,sBAAKgB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,MAAOV,EACPW,SAnBY,SAACC,GACrBX,GAAgBW,EAAMC,OAAOH,QAavB,UAQE,wBAAQA,MAAOpB,EAAkB,GAAjC,SAAsCA,EAAkB,KACxD,wBAAQoB,MAAOpB,EAAkB,GAAjC,SAAsCA,EAAkB,KACxD,wBAAQoB,MAAOpB,EAAkB,GAAjC,SAAsCA,EAAkB,KACxD,wBAAQoB,MAAOpB,EAAkB,GAAjC,SAAsCA,EAAkB,UAI5D,uBAAOwB,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEhB,MAAOA,EACPC,QAASgC,EACT/B,YAAaiC,EACbhC,aAAciC,IAGhB,6BACGC,EAAa3B,KAAI,SAAAW,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YEhEjB2B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5f27fe84.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport classNames from 'classnames';\n\n type Props = {\n   total: number,\n   perPage: number,\n   currentPage: number,\n   onPageChange: ((page: number) => void),\n };\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  useEffect(() => {\n    onPageChange(1);\n  }, [perPage]);\n\n  const maxPagination = Math.ceil(total / perPage);\n  const pagination = [...Array(maxPagination)].map((_, i) => i + 1);\n  const isPrevDisabled = currentPage === 1;\n  const isNextDisabled = currentPage === pagination.length;\n\n  const prevPage = () => {\n    if (!isPrevDisabled) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const nextPage = () => {\n    if (!isNextDisabled) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: isPrevDisabled,\n          },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isPrevDisabled}\n          onClick={prevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pagination.map(item => (\n        <li\n          key={item}\n          className={classNames(\n            'page-item',\n            {\n              active: currentPage === item,\n            },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${item}`}\n            onClick={() => onPageChange(item)}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: isNextDisabled,\n          },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isNextDisabled}\n          onClick={nextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst PER_PAGE_SELECTOR = [3, 5, 10, 20];\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [selectValue, setSelectValue] = useState(PER_PAGE_SELECTOR[1]);\n  const [currentValue, setCurrentValue] = useState(1);\n\n  const total = items.length;\n\n  const visibleItems = items.slice(\n    (currentValue - 1) * selectValue, currentValue * selectValue,\n  );\n\n  const firstItem = items.indexOf(visibleItems[0]) + 1;\n  const lastItem = items.indexOf(visibleItems[visibleItems.length - 1]) + 1;\n\n  const hendlerSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    setSelectValue(+event.target.value);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentValue} (items ${firstItem} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={selectValue}\n            onChange={hendlerSelect}\n          >\n\n            <option value={PER_PAGE_SELECTOR[0]}>{PER_PAGE_SELECTOR[0]}</option>\n            <option value={PER_PAGE_SELECTOR[1]}>{PER_PAGE_SELECTOR[1]}</option>\n            <option value={PER_PAGE_SELECTOR[2]}>{PER_PAGE_SELECTOR[2]}</option>\n            <option value={PER_PAGE_SELECTOR[3]}>{PER_PAGE_SELECTOR[3]}</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={selectValue}\n        currentPage={currentValue}\n        onPageChange={setCurrentValue}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}